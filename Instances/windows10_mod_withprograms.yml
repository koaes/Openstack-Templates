heat_template_version: 2018-03-02

description: Template that creates a private network

parameters:
  public_network:
    type: string
    label: Public network name or ID
    description: Public network with floating IP addresses.
    default: public
  cidr:
    type: string
    label: Network CIDR
    description: The CIDR of the private network.
    default: '192.168.100.0/24'
  dns:
    type: comma_delimited_list
    label: DNS nameservers
    description: Comma separated list of DNS nameservers for the private network.
    default: '8.8.8.8'
  target_ip:
    type: string
    label: Target IP Address
    description: IP Address of Target Computer
    default: '192.168.100.15'

resources:
  private_network:
    type: OS::Neutron::Net
  
  private_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: private_network }
      cidr: { get_param: cidr }
      dns_nameservers: { get_param: dns } 

  router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: { get_param: public_network }

  router-interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet: { get_resource: private_subnet }

  window10target:
    type: OS::Nova::Server
    properties:
      metadata: {admin_pass: abc123!@#}
      flavor: cy.large
      image: Windows 10 LTSC 2019
      name: windows10Target
      block_device_mapping: [{"volume_size": 100, "volume_id": {get_resource: volume_windows10Target }, "delete_on_termination": True, "device_name": "/dev/vda" }]
      networks: [port: {get_resource: port_windows10Target}]
      user_data: |
        #ps1
        Function password_setup {
          $securepwd = ConvertTo-SecureString "toor" -AsPlaintext -Force
          New-LocalUser -Name "User01" -Password $securepwd
          Add-LocalGroupMember -Group "Administrators" -Member "User01"
        }
        Function network_setup{
          Set-NetConnectionProfile -InterfaceAlias "Ethernet" -NetworkCategory Public
          Set-NetFirewallProfile -Profile Domain,Public,Private -Enabled False
        }
        Function filesystem_setup {
         New-Item -ItemType directory -Path c:\temp
        }
        Function registry_setup {
          New-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" -Name "LocalAccountTokenFilterPolicy" -Value "1" -PropertyType DWORD -Force
          [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
          $webClient = New-Object System.Net.WebClient
          $webClient.DownloadFile("https://vignette.wikia.nocookie.net/steamtradingcards/images/c/c7/Hacker_Evolution_Untold_Background_Operations_Map.jpg/revision/latest?cb=20140729193444", "c:\Users\User01\Desktop\tools\bg.jpg")
          Set-ItemProperty -path 'HKCU:\Control Panel\Desktop\' -Name Wallpaper -Value "c:\Users\User01\Desktop\tools\bg.jpg"
          Reg Add HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Authentication\LogonUI\UserSwitch /v Enabled /t REG_DWORD /d 1 /f
          Set-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Authentication\LogonUI\UserSwitch' -Name Enabled -Value 1
        }
        Function downloadTools{
          $destPath = "c:\temp\files.zip"         
          $url = "https://dl.dropboxusercontent.com/s/93y3qkef2gjx8yy/files.zip?dl=0"
          $webClient = New-Object System.Net.WebClient
          $webClient.DownloadFile($url, $destPath)    
          Expand-Archive -Path c:\temp\files.zip -DestinationPath c:\temp
          $programs = @(("npp.7.5.9.Installer.exe", "https://notepad-plus-plus.org/repository/7.x/7.5.9/", " /Q /S"),
            ("nmap-7.70-setup.exe", "https://nmap.org/dist/", " /S"),
            ("Wireshark-win64-2.6.5.exe", "https://1.na.dl.wireshark.org/win64/", " /S"),
            ("putty.exe", "https://the.earth.li/~sgtatham/putty/latest/w32/", " /verysilent"),
            ("1.exe", "https://download.mozilla.org/?product=firefox-latest-ssl&os=win64&lang=en-US", " -ms"),
            ("processhacker-2.39-setup.exe", "https://github.com/processhacker2/processhacker2/releases/download/v2.39/", " /VERYSILENT"))
            $filePath = "c:\temp\"
            for($i=0; 4i -lt $programs.Length; $i++){
              $filewithpath = $filepath + $programs[$i][0]
              $args = $programs[$i][2]
              Invoke-Expression -Command "$filewithpath $args"
            } 
        }
        password_setup
        network_setup
        filesystem_setup
        registry_setup
        downloadTools
        Invoke-Expression -Command 'c:\program files\mozilla firefox\firefox.exe'
      user_data_format: RAW

  port_windows10Target:
    type: OS::Neutron::Port
    properties:
      name: port_windows10Target
      network_id: { get_resource: private_network }
      fixed_ips: [{subnet: {get_resource: private_subnet}, ip_address: { get_param: target_ip }}]

  volume_windows10Target:
    type: OS::Cinder::Volume
    properties:
      size: 100
      image: Windows 10 LTSC 2019
